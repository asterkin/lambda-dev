AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
    # Code repository for the service
    CodeRepository:
        Type: AWS::CodeCommit::Repository
        Properties:
            RepositoryName: !Sub 'CreateThumbnail_repo'
            RepositoryDescription: !Sub 'Repository for the CreateThumbnail service'

    BuildArtifactsBucket:
        Type: AWS::S3::Bucket

    CodeBuildServiceRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action: 
                      - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service:
                        - codebuild.amazonaws.com
            Path: /
            Policies:
                - PolicyName: CodeBuildAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - Effect: Allow
                        Resource:
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/CreateThumbnail_build'
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/CreateThumbnail_build:*'
                        Action:
                          - 'logs:CreateLogGroup'
                          - 'logs:CreateLogStream'
                          - 'logs:PutLogEvents'
                      - Effect: Allow
                        Resource:
                          - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                        Action: 
                          - 's3:GetObject'
                          - 's3:GetObjectVersion'
                          - 's3:PutObject'

    CodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Name: !Sub 'CreateThumbnail_build'
            Description: Build project for the Lambda service
            Artifacts:
                Type: CODEPIPELINE
            Environment: 
                Type: LINUX_CONTAINER
                ComputeType: BUILD_GENERAL1_SMALL
                Image: aws/codebuild/nodejs:4.3.2
                EnvironmentVariables:
                    - Name: BUILD_OUTPUT_BUCKET
                      Value: !Ref BuildArtifactsBucket
            ServiceRole: !GetAtt CodeBuildServiceRole.Arn
            Source: 
                Type: CODEPIPELINE

    # Integration tests function
    StartTestsFunctionExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action: 
                - 'sts:AssumeRole'
              Effect: Allow
              Principal:
                Service: 
                  - lambda.amazonaws.com
        Path: /
        Policies:
          - PolicyName: InvokeAsync
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - 'lambda:InvokeAsync'
                    - 'lambda:InvokeFunction'
                    - 'cloudformation:*'
                    - 'codepipeline:*'
                    - 'logs:*'
                  Effect: Allow
                  Resource: '*'

    StartTestsFunction:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: !Sub 'CreateThumbnail_start_tests'
        Description: !Sub 'Starts integration tests function CreateThumbnail'
        Handler: index.start_tests
        MemorySize: 128
        Role: !GetAtt StartTestsFunctionExecutionRole.Arn
        Runtime: nodejs4.3
        Timeout: 5
        Code:
          ZipFile: >
            var AWS            = require('aws-sdk');
            var cloudformation = new AWS.CloudFormation();
            var lambda         = new AWS.Lambda();
            var codepipeline   = new AWS.CodePipeline();

            function handleError(jobId, err) {
               console.log(err, err.stack); // an error occurred
                var params = {
                  failureDetails: { /* required */
                    message: err.message, /* required */
                    type: 'JobFailed' /* required */
                  },
                  jobId: jobId /* required */
                };
                codepipeline.putJobFailureResult(params, function(err, data) {
                  if (err) console.log(err, err.stack); // an error occurred
                  else     console.log(data);           // successful response
                });
            }

            exports.start_tests = function(event, context, callback) {
              console.log("Got event:\n", event);
              var job            = event["CodePipeline.job"]; //very strange!!!
              console.log(job);
              var jobId          = job.id;
              var stackName      = "CreateThumbnail-Stack-Tests"  
              console.log("Setting Test Function Stack to:\n", stackName);
              cloudformation.describeStackResource({
                 LogicalResourceId: 'CreateThumbnailTest', /* required */
                 StackName:         stackName /* required */
                },
                function(err, data){
                  if (err) {
                    handleError(jobId, err);
                  } else {
                    var func = data.StackResourceDetail.PhysicalResourceId;
                    console.log("Invoking test function:", func);
                    var args = {
                         FunctionName: func,
                         InvokeArgs:   JSON.stringify({ jobId: jobId })
                    };
                    lambda.invokeAsync(
                      args, 
                      function(err, data) {
                        if (err) handleError(jobId, err);   // an error occurred
                        else     console.log("Invoked!", data); // successful response
                      });
                    }
                });

            }

    # CodePipeline definition and required roles
    CFNPipelinePolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: CloudFormation Pipeline Execution Policy
            Path: "/"
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Effect: Allow
                    Action: 
                        - 'cloudformation:CreateStack'
                        - 'cloudformation:DescribeStacks'
                        - 'cloudformation:DeleteStack'
                        - 'cloudformation:UpdateStack'
                        - 'cloudformation:CreateChangeSet'
                        - 'cloudformation:ExecuteChangeSet'
                        - 'cloudformation:DeleteChangeSet'
                        - 'cloudformation:DescribeChangeSet'
                        - 'cloudformation:SetStackPolicy'
                        - 'cloudformation:SetStackPolicy'
                        - 'cloudformation:ValidateTemplate'
                        - 'codebuild:StartBuild'
                        - 'codebuild:BatchGetBuilds'
                    Resource: "*"

    CloudFormationExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action: 
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
        Path: /
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/AdministratorAccess'

    PipelineExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action: 
                    - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service: 
                        - codepipeline.amazonaws.com
            Path: /
            ManagedPolicyArns:
                - 'arn:aws:iam::aws:policy/AWSCodeCommitFullAccess'
                - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
                - !Ref CFNPipelinePolicy
            Policies:
                - PolicyName: CodePipelineAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - Action:
                            - 'iam:PassRole'
                            - 'lambda:InvokeFunction'
                            - 'lambda:ListFunctions'
                            - 'lambda:InvokeAsyc'
                          Effect: Allow
                          Resource: '*'

    Pipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            ArtifactStore: 
                Location: !Ref BuildArtifactsBucket
                Type: S3
            Name: !Sub CreateThumbnail_pipeline
            RoleArn: !GetAtt PipelineExecutionRole.Arn
            Stages:
                - Name: Source
                  Actions:
                    - Name: CodeCommitRepo
                      ActionTypeId:
                        Category: Source
                        Owner: AWS
                        Provider: CodeCommit
                        Version: 1
                      Configuration:
                        RepositoryName: !Sub 'CreateThumbnail_repo'
                        BranchName: master
                      OutputArtifacts:
                        - Name: SourceZip
                      RunOrder: 1
                - Name: Build
                  Actions:
                    - Name: CodeBuild
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref CodeBuildProject
                      InputArtifacts:
                        - Name: SourceZip
                      OutputArtifacts:
                        - Name: BuiltZip
                - Name: DeployTests
                  Actions:
                    - Name: CreateChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: 1
                      Configuration:
                        ActionMode: CHANGE_SET_REPLACE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: !Sub 'CreateThumbnail-Stack-Tests'
                        ChangeSetName: !Sub 'CreateThumbnail-ChangeSet-Tests'
                        TemplatePath: BuiltZip::CreateThumbnailTest-SAM.yaml
                        Capabilities: CAPABILITY_IAM
                        ParameterOverrides: !Sub '{ "TestDataBucket": "${BuildArtifactsBucket}", "StackName": "CreateThumbnail-Stack-Beta" }'
                      InputArtifacts:
                        - Name: BuiltZip
                      OutputArtifacts:
                        - Name: TestChangeSet
                      RunOrder: 1
                    - Name: ExecuteChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: 1
                      Configuration:
                        ActionMode: CHANGE_SET_EXECUTE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: !Sub 'CreateThumbnail-Stack-Tests'
                        ChangeSetName: !Sub 'CreateThumbnail-ChangeSet-Tests'
                      OutputArtifacts:
                        - Name: ExecutedTestChangeSet
                      RunOrder: 2
                - Name: Beta
                  Actions:
                    - Name: CreateChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: 1
                      Configuration:
                        ActionMode: CHANGE_SET_REPLACE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: !Sub 'CreateThumbnail-Stack-Beta'
                        ChangeSetName: !Sub 'CreateThumbnail-ChangeSet-Beta'
                        TemplatePath: BuiltZip::CreateThumbnail-SAM.yaml
                        Capabilities: CAPABILITY_IAM
                      InputArtifacts:
                        - Name: BuiltZip
                      RunOrder: 1
                    - Name: ExecuteChangeSet
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CloudFormation
                        Version: 1
                      Configuration:
                        ActionMode: CHANGE_SET_EXECUTE
                        RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                        StackName: !Sub 'CreateThumbnail-Stack-Beta'
                        ChangeSetName: !Sub 'CreateThumbnail-ChangeSet-Beta'
                      OutputArtifacts:
                        - Name: !Sub 'CreateThumbnailBetaChangeSet'
                      RunOrder: 2
                    - Name: IntegrationTests
                      ActionTypeId:
                        Category: Invoke
                        Owner: AWS
                        Provider: Lambda
                        Version: 1
                      Configuration:
                        FunctionName: !Ref StartTestsFunction
                      InputArtifacts:
                        - Name: !Sub 'CreateThumbnailBetaChangeSet'
                      RunOrder: 3

